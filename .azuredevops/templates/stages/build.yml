parameters:
  - name: stage
    type: string
    default: Deploy
  - name: dependsOn
    type: object
    default: []
  - name: condition
    type: string
    default: and(succeeded(), true)
  - name: project
    type: string

stages:
  - stage: ${{parameters.stage}}
    dependsOn: ${{parameters.dependsOn}}
    condition: ${{parameters.condition}}
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: Build
        displayName: 'Build Project - ${{ parameters.project }}'

        variables:
          buildConfiguration: 'release'

        steps:
          - task: NuGetAuthenticate@0

          - task: DotNetCoreCLI@2
            displayName: 'Restore Project Dependencies - ${{ parameters.project }}'
            inputs:
              command: 'restore'
              projects: 'src/${{ parameters.project }}/**/*.csproj'
              nugetConfigPath: 'NuGet.config'
              feedsToUse: config

          - task: DotNetCoreCLI@2
            displayName: 'Build Project - ${{ parameters.project }}'
            inputs:
              command: 'build'
              arguments: '--no-restore --configuration $(buildConfiguration)'
              projects: 'src/${{ parameters.project }}/**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Publish Project - ${{ parameters.project }}'
            inputs:
              command: 'publish'
              projects: 'src/${{ parameters.project }}/**/*.csproj'
              publishWebProjects: false
              arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/${{ parameters.project }}'
              zipAfterPublish: true

          - publish: '$(Build.ArtifactStagingDirectory)/${{ parameters.project }}'
            displayName: 'Publish Artifact - ${{ parameters.project }}'
            artifact: ${{ parameters.project }}
